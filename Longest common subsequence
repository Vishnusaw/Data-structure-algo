
class Solution
{
    private:
    
    int solve(string a,string b,int i,int j,vector<vector<int>> & dp){
        
        if(i>=a.size()) return 0;
        if(j>=b.size()) return 0;
        
        if(dp[i][j] != -1) return dp[i][j];
        
        if(a[i] == b[j]){
            return dp[i][j] = 1 + solve(a,b,i+1,j+1,dp);
        }else{
            int x = solve(a,b,i+1,j,dp);
            int y = solve(a,b,i,j+1,dp);
            
            return dp[i][j] = max(x,y);
        }
    }
    public:
    //Function to find the length of longest common subsequence in two strings.
    int lcs(int x, int y, string s1, string s2)
    {
        // your code here
    
        
        vector<vector<int>> dp(x+1,vector<int>(y+1,0));
        
        // return solve(s1,s2,0,0,dp);
        
        
        for(int i=x-1;i>=0;i--){
            for(int j=y-1;j>=0;j--){
                if(s1[i] == s2[j]){
                    dp[i][j] = 1 + dp[i+1][j+1];
                }else{
                    dp[i][j] = max(dp[i+1][j],dp[i][j+1]);
                }
            }
        }
        
        
        return dp[0][0];
    
    }
};
